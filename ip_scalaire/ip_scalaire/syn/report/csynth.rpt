

================================================================
== Synthesis Summary Report of 'test_scalaire'
================================================================
+ General Information: 
    * Date:           Thu Jan 27 11:08:56 2022
    * Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:33 MDT 2021)
    * Project:        ip_scalaire
    * Solution:       ip_scalaire (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z010-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +---------------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+----------+--------+-----------+------------+-----+
    |                   Modules                   |  Issue |       | Latency |  Latency  | Iteration|         | Trip |          |          |        |           |            |     |
    |                   & Loops                   |  Type  | Slack | (cycles)|    (ns)   |  Latency | Interval| Count| Pipelined|   BRAM   |   DSP  |     FF    |     LUT    | URAM|
    +---------------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+----------+--------+-----------+------------+-----+
    |+ test_scalaire                              |  Timing|  -0.00|     2851|  1.426e+04|         -|     2852|     -|        no|  12 (10%)|  5 (6%)|  2678 (7%)|  3342 (18%)|    -|
    | + grp_test_scalaire_Pipeline_loop_1_fu_139  |  Timing|  -0.00|     2827|  1.414e+04|         -|     2827|     -|        no|         -|  5 (6%)|   748 (2%)|    922 (5%)|    -|
    |  o loop_1                                   |       -|   3.65|     2825|  1.412e+04|        21|       11|   256|       yes|         -|       -|          -|           -|    -|
    +---------------------------------------------+--------+-------+---------+-----------+----------+---------+------+----------+----------+--------+-----------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+---------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface     | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|               | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+---------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_bus_A   | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |
| m_axi_bus_B   | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |
| m_axi_bus_res | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |
+---------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+----------+
| Argument | Direction | Datatype |
+----------+-----------+----------+
| A        | in        | float*   |
| B        | in        | float*   |
| res      | out       | float*   |
+----------+-----------+----------+

* SW-to-HW Mapping
+----------+-------------------+-----------+----------+-----------------------+
| Argument | HW Name           | HW Type   | HW Usage | HW Info               |
+----------+-------------------+-----------+----------+-----------------------+
| A        | m_axi_bus_A       | interface |          |                       |
| A        | s_axi_control A   | register  | offset   | offset=0x10, range=32 |
| B        | m_axi_bus_B       | interface |          |                       |
| B        | s_axi_control B   | register  | offset   | offset=0x18, range=32 |
| res      | m_axi_bus_res     | interface |          |                       |
| res      | s_axi_control res | register  | offset   | offset=0x20, range=32 |
+----------+-------------------+-----------+----------+-----------------------+


================================================================
== M_AXI Burst Information
================================================================
* Burst Summary
+---------------+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------+
| HW Interface  | Loop   | Message                                                                                                                                                                                                                  | Location                     |
+---------------+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------+
| m_axi_bus_A   | loop_1 | Multiple burst reads of length 256 and bit width 32. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. | ip_scalaire/ip_scal.cpp:13:9 |
| m_axi_bus_B   | loop_1 | Multiple burst reads of length 256 and bit width 32. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. | ip_scalaire/ip_scal.cpp:13:9 |
| m_axi_bus_res |        | Multiple burst writes of length 9 and bit width 32. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.  | ip_scalaire/ip_scal.cpp:30:1 |
+---------------+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------+

* Bursts and Widening Missed
+---------------+----------+---------------------------------------------------------------------------------------------------------------------+------------------------------+
| HW Interface  | Variable | Problem                                                                                                             | Location                     |
+---------------+----------+---------------------------------------------------------------------------------------------------------------------+------------------------------+
| m_axi_bus_res | res      | Could not widen since the size of type 'float' is greater than or equal to the max_widen_bitwidth threshold of '0'. | ip_scalaire/ip_scal.cpp:30:1 |
| m_axi_bus_A   | A        | Could not widen since the size of type 'float' is greater than or equal to the max_widen_bitwidth threshold of '0'. | ip_scalaire/ip_scal.cpp:13:9 |
| m_axi_bus_B   | B        | Could not widen since the size of type 'float' is greater than or equal to the max_widen_bitwidth threshold of '0'. | ip_scalaire/ip_scal.cpp:13:9 |
+---------------+----------+---------------------------------------------------------------------------------------------------------------------+------------------------------+


